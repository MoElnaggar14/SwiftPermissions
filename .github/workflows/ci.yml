name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: macos-14
    strategy:
      matrix:
        xcode: ['15.0', '15.1', '15.2']
        destination: [
          'platform=iOS Simulator,OS=17.0,name=iPhone 15',
          'platform=iOS Simulator,OS=16.0,name=iPhone 14',
          'platform=iOS Simulator,OS=15.0,name=iPhone 13'
        ]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ matrix.xcode }}
    
    - name: Cache Swift packages
      uses: actions/cache@v3
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('Package.swift') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Build
      run: swift build -v
    
    - name: Run tests
      run: swift test -v --enable-code-coverage
    
    - name: Generate test report
      run: |
        xcrun llvm-cov export -format="lcov" .build/debug/SwiftPermissionsPackageTests.xctest/Contents/MacOS/SwiftPermissionsPackageTests -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage.lcov
        fail_ci_if_error: false

  build-example:
    name: Build Example
    runs-on: macos-14
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.2'
    
    - name: Build for iOS
      run: |
        xcodebuild -scheme SwiftPermissions -destination 'platform=iOS Simulator,OS=17.0,name=iPhone 15' build
    
    - name: Build for macOS
      run: |
        xcodebuild -scheme SwiftPermissions -destination 'platform=macOS' build

  lint:
    name: SwiftLint
    runs-on: macos-14
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Install SwiftLint
      run: brew install swiftlint
    
    - name: Run SwiftLint
      run: swiftlint
